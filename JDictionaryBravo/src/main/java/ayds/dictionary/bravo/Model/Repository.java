package ayds.dictionary.bravo.Model;import ayds.dictionary.bravo.Model.ErrorHandler.ErrorHandler;import ayds.dictionary.bravo.Model.LocalSource.LocalSource;import ayds.dictionary.bravo.Model.RemoteSource.WikipediaRemoteSourceAdapter;import java.io.IOException;public class Repository {    private final LocalSource localSource;//OBJETO al que le pide una lista del tipo enumerado (este objeto es el que hace de factory)    private final ErrorHandler errorHandler;    public Repository(LocalSource localSource, ErrorHandler errorHandler) {        this.localSource = localSource;        this.errorHandler = errorHandler;    }    public Article getArticle(String term) {        //recorrer la lista del tipo enumerado            //si esta en la base de datos para tal fuente                //            //si no esta le pide al OBJETO getArticle(term,fuente)        try {            Article article = localSource.getMeaning(term);            if (article == null) {               // article = wikipediaAdapter.getArticle(term);                localSource.saveArticle(article);            } else {                article.addPrefix();            }            return article;        } catch (IOException e) {            errorHandler.hasError(new Exception("No hay conexi√≥n."));            return new EmptyArticle(term,Source.WIKIPEDIA);        }    }}