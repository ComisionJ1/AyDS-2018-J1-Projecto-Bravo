package ayds.dictionary.bravo.Model;import ayds.dictionary.bravo.Model.ErrorHandler.ErrorHandler;import ayds.dictionary.bravo.Model.LocalSource.LocalSource;import ayds.dictionary.bravo.Model.RemoteSource.RemoteSourceServices;import ayds.dictionary.bravo.Model.RemoteSource.WikipediaRemoteSourceAdapter;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class Repository {    private final LocalSource localSource;    private final RemoteSourceServices remoteSourceServices;//OBJETO al que le pide una lista del tipo enumerado (este objeto es el que hace de factory)    private final ErrorHandler errorHandler;    public Repository(LocalSource localSource, ErrorHandler errorHandler, RemoteSourceServices remoteSourceServices) {        this.localSource = localSource;        this.errorHandler = errorHandler;        this.remoteSourceServices = remoteSourceServices;    }    public List<Article> getArticles(String term) {        List<Article> articles = new ArrayList<>();        Article article;        boolean error=false;        for (Source source: remoteSourceServices.getSources()){            try {                article = localSource.getMeaning(source, term);                if (article == null) {                    article = remoteSourceServices.getArticle(source, term);                    localSource.saveArticle(article);                } else {                    article.addPrefix();                }                articles.add(article);            } catch (Exception e) {                error=true;                articles.add(new EmptyArticle(term,source));            }        }        if(error) {            errorHandler.hasError(new Exception("No hay conexi√≥n."));        }        return articles;        //recorrer la lista del tipo enumerado            //si esta en la base de datos para tal fuente                //            //si no esta le pide al OBJETO getArticle(term,fuente)    }}